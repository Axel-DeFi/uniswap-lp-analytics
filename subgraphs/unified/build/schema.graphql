# Minimal schema for pools and tokens (V3 & V4). We keep Pool mutable and Token immutable.

type Token @entity(immutable: true) {
  id: ID!                       # token address (lowercase)
  symbol: String
  name: String
  decimals: Int!
  chainId: Int!
  createdAtTimestamp: BigInt!
}

type Pool @entity(immutable: false) {
  id: ID!                       # V3: pool address; V4: bytes32 pool id
  version: Int!                 # 3 or 4
  chainId: Int!                 # 1 for Ethereum mainnet in this step
  token0: Token!
  token1: Token!
  feeTierBps: Int!
  tickSpacing: Int!
  createdAtTimestamp: BigInt!
}

# Daily slice per pool (token volumes for now; USD later).
type PoolDayData @entity(immutable: false) {
  id: ID!                       # "<poolId>-<dayId>"
  pool: Pool!
  date: Int!                    # dayId = timestamp / 86400 (UTC)
  volumeToken0: BigDecimal!     # token units
  volumeToken1: BigDecimal!     # token units
  swapCount: Int!
  volumeUSD: BigDecimal!        # placeholder (0 for now)
  feesUSD: BigDecimal!          # placeholder (0 for now)
  tvlUSD: BigDecimal!           # placeholder (0 for now)
}

# Hourly slice per pool.
type PoolHourData @entity(immutable: false) {
  id: ID!                       # "<poolId>-<hourId>"
  pool: Pool!
  periodStartUnix: Int!           # hourId = timestamp / 3600 (UTC)
  volumeToken0: BigDecimal!
  volumeToken1: BigDecimal!
  swapCount: Int!
  volumeUSD: BigDecimal!        # placeholder (0 for now)
  feesUSD: BigDecimal!          # placeholder (0 for now)
  tvlUSD: BigDecimal!           # placeholder (0 for now)
}

# Hourly price snapshot per pool (V3), updated on each Swap.
type PoolPriceHour @entity(immutable: false) {
  id: ID!                # "<poolId>-<hourId>"
  pool: Pool!
  periodStartUnix: Int!
  sqrtPriceX96: BigInt!
  price0: BigDecimal!    # token1 per 1 token0 (decimals-adjusted)
  price1: BigDecimal!    # token0 per 1 token1 (decimals-adjusted)
  liquidity: BigInt!     # liquidity after swap (from event)
  updatedAt: Int!        # block timestamp of last swap in this hour
}
